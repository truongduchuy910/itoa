proxy_cache_path /var/cache/nginx/T004 levels=1:2 keys_zone=T004:10m inactive=7d use_temp_path=off;
upstream T004 {
  server 127.0.0.1:6005;
}
server {
  server_name mayberoom.vn;
  location / {
    proxy_pass http://T004;
  }
  location ~ ^/(upload|loader|admin) {
    proxy_pass http://seller;
  }
  location ~ ^/(_next) {
    proxy_pass http://T004;
    proxy_cache T004;
  }
  location ~ ^/(assets) {
    proxy_pass http://seller;
    proxy_cache T004;
  }
  location /quan-tri {
    proxy_pass http://headless;
  }
  error_page 404 /assets/html/404.html;
  error_page 500 502 503 504 /assets/html/50x.html;
  keepalive_requests 10000;
  client_max_body_size 5M;
  proxy_http_version 1.1;
  proxy_set_header upgrade $http_upgrade;
  proxy_set_header connection 'upgrade';
  proxy_set_header host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_cache_bypass $http_upgrade;
  proxy_cache_methods GET HEAD POST;
  proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";
  add_header X-Cache-Status $upstream_cache_status;
  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/mayberoom.vn/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/mayberoom.vn/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
  if ($host = mayberoom.vn) {
    return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name mayberoom.vn;
    listen 80;
    return 404; # managed by Certbot


  }
